{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.ts","webpack:///./src/util.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { isObj } from \"./util\";\n\ninterface IModalOptions {\n    /**\n     * Modal name\n     * @default modal\n     */\n    name?: string;\n    /**\n     * Whether to automatically close the modal after the callback function is executed\n     * @default true\n     */\n    selfClosing?: boolean;\n}\n\nexport class Modal<T = any> {\n\n    private options: IModalOptions;\n\n    constructor(options: IModalOptions = {}) {\n        this.options = Object.assign({ selfClosing: true }, options);\n    }\n\n    /**\n     * Get modal visible status in data used in TSX.\n     *\n     * @example\n     * {\n     *      modal=new Modal({ name:\"modal\" });\n     *      render(){\n     *          return {this.modal.visible()&&(<View></View>)}\n     *      }\n     * }\n     *\n     */\n    public visible() {\n        return this.get('visible');\n    }\n\n    /**\n     * Get modal data in data used in TSX.\n     *\n     * @example\n     * {\n     *      modal=new Modal({ name:\"modal\" });\n     *      render(){\n     *          return <MyComonent props={this.modal.data()}></MyComonent>\n     *      }\n     * }\n     *\n     */\n    public data() {\n        return this.get('data');\n    }\n\n    /**\n     * Get modal success callback used in TSX.\n     *\n     * @example\n     * {\n     *      modal=new Modal({ name:\"modal\" });\n     *      render(){\n     *          return <MyComonent onSuccess={this.modal.success()}></MyComonent>\n     *      }\n     * }\n     *\n     */\n    public success() {\n        const key = this.get('success');\n        if (!key) return;\n        const target = this.target();\n        return target[key] && target[key].bind(target);\n    }\n\n    /**\n     * Get modal fail callback used in TSX.\n     *\n     * @example\n     * {\n     *      modal=new Modal({ name:\"modal\" });\n     *      render(){\n     *          return <MyComonent onFail={this.modal.fail()}></MyComonent>\n     *      }\n     * }\n     *\n     */\n    public fail() {\n        const key = this.get('fail');\n        if (!key) return;\n        const target = this.target();\n        return target[key] && target[key].bind(target);\n    }\n\n    private get(key: 'visible' | 'data' | 'success' | 'fail') {\n        if (!this.target) return;\n        const target = this.target();\n        const data = [target.data, target.state].find(item => item && item[this.options.name]);\n        return data && data[this.options.name][key];\n    }\n\n    private target: () => any;\n\n    /**\n     * Bind for all modals in thisArg, the modal name will be set to it's property name if it's name is missing.\n     * @param thisArg\n     * @example\n     *\n     * Page({\n     *      modal1:new Modal({ name:'modal1' });\n     *      modal2:new Modal({ name:'modal2' });\n     *      onLoad(){\n     *          Modal.init(this);\n     *      }\n     * })\n     */\n    public static init(thisArg) {\n        Object.keys(thisArg)\n            .filter(key => thisArg[key] instanceof Modal)\n            .forEach(key => thisArg[key].bind(thisArg, { name: thisArg[key].name || key }))\n    }\n\n    /**\n     * Bind this argument with page or component object for current modal.\n     *\n     * @param thisArg page or component object.\n     * @param options modal options.\n     * @example\n     *\n     * const modal=new Modal();\n     * modal.bind(this);\n     */\n    public bind(thisArg, options?: IModalOptions) {\n        this.target = () => thisArg;\n        this.options = Object.assign({}, this.options, options);\n        return this;\n    }\n\n    private setData(data) {\n        const target = this.target();\n        const setData = target.setData || target.setState;\n        setData.call(target, data);\n    }\n\n    /**\n     * Show modal.\n     *\n     * @param data modal data to set.\n     * @param extra extra object data to set.\n     * @example\n     *\n     * <button bind:tap=\"showModal\">show modal</button>\n     * <my-modal wx:if=\"{{modal.visible}}\" props=\"{{modal.data}}\" bind:complete=\"{{modal.success}}\" bind:error=\"{{modal.fail}}\"></my-modal>\n     *\n     * import { Modal } from 'mp-modal';\n     *\n     * Page({\n     *      showModal(){\n     *          new Modal({ name:'modal' })\n     *              .bind(this)\n     *              .show({...props})\n     *              .then(()=>console.log('success'))\n     *              .catch(()=>console.log('error'))\n     *      }\n     * })\n     *\n     */\n    public show(data?: T, extra?: object): Promise<any> {\n        const target = this.target();\n        const name = this.options.name || 'modal';\n        const success = `$modal_${name}_success_key`;\n        const fail = `$modal_${name}_fail_key`;\n        let promise = new Promise((resolve, reject) => {\n            target[success] = resolve;\n            target[fail] = reject;\n        });\n        this.setData({\n            [name]: {\n                data,\n                fail,\n                success,\n                visible: true,\n            },\n            ...(isObj(extra) ? extra : {}),\n        })\n        if (this.options.selfClosing) {\n            promise = promise.finally(() => this.hide());\n        }\n        return promise;\n    }\n\n    /**\n     * Hide modal\n     *\n     * @example\n     *\n     * this.modal.hide()\n     */\n    public hide() {\n        const name = this.options.name || 'modal';\n        this.setData({ [name]: { visible: false } });\n    }\n}","export function isObj(obj: any): obj is object {\n    const toString = Object.prototype.toString;\n    return toString.call(obj) === toString.call({});\n}"],"sourceRoot":""}